@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap');
:root {
    --background: #1e1e2e;
    --background2: #2e2e3e;
    --borders: #313244;
    --borders-emph: #45475a;
    --button: #cdd6f4;
    --button-text: #333546;
    --text: #9399b2;
    --text2: #6272a4;
    --link: #74b8c7;
    --link-visited: #ffffff;
    --highlight_r: #f38ba8;
    --highlight_o: #fab387;
    --highlight_y: #f9e2af;
    --highlight_g: #a6e3a1;
    --highlight_b: #89b4fa;
    --border-radius: 5px;
    --border-width: 2px;
    font-family: 'JetBrains Mono', monospace;
    font-size: 1.2em;
}

:root {
    --text-padding: 22px;
}

/* Any <pre> with a direct <code> child  */
pre:has(> code) { 
    margin-left: auto;
    margin-right: auto;
}

pre code {
    background-color: var(--background2);
    font-size: 1.1em;
    padding: 7px;
    display: block ;
    width: 90% ;
    margin-left: auto;
    margin-right: auto;
}

/* Why do i have to do this to get the font sized properly ? h1/2 apply correctly */
:root h3 { font-size: 1.15em; }
/* :root h4 { font-size: 1.1em; } */


details { margin-top: 20px; margin-bottom: 10px; cursor: pointer; }

body {
    background-color: var(--background);
    color: var(--text);
    padding: 0px 15px 15px 15px;
    min-height: 1500px;
}

/* why does this not apply to the options on select ? */
select {
    border: var(--border-width) solid var(--borders);
    background-color: transparent;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    padding: 5px;
}


input {
    background-color: transparent;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
}

button {
    background-color: var(--button);
    color: var(--button-text);
    font-family: inherit;
    font-size: inherit;
    border: none;
    border-radius: 0px;
    padding: 5px;
    margin: 10px;
}

button:hover { text-decoration: underline }
button:active { font-weight: bold; }

h1 { color: var(--highlight_b); }
h2 { color: var(--highlight_g); }
h3 { color: var(--highlight_o); }
h4 { color: var(--highlight_r); }

a { color: var(--link); cursor: pointer; text-decoration: none; }
a:hover { text-decoration: underline; }

hr { background-color: var(--borders); border: none; border-radius: var(--border-radius); width: 90%; height: 3px; }

nav {
    width: 100%;
    border: var(--border-width) solid var(--borders);
    margin: 0px; 
    padding: 8px 5px 8px 5px;
    font-size: 1.05em ;
}

table, th, td {
    border: var(--border-width) solid var(--borders);
    border-collapse: collapse;
}
th { padding: 4px; }
td { padding: 2px; }

.container {
    border: var(--border-width) solid var(--borders);
    border-radius: var(--border-radius);
    margin: 30px 5px 10px 5px;
    padding: 7px;
}
.container-title {
    position: relative;
    top: -27px;
    left: 30px;
    background-color: var(--background);
    padding: 5px 10px 5px 10px;
}

.content {
    display: flex;
    flex-direction: row;
}

.notes-list-container {
    margin: 0px 0px 5px 0px;
    width: 25%;
    padding-right: 40px;
    border: var(--border-width) solid var(--borders);
    padding: 0px 5px 5px 10px;
    font-size: 0.7em;
    min-height: 30vh;
    color: var(--text2);

}
.notes-list-container h2 { font-size: 1.7em; padding: 20px 0px 20px 0px; margin: 0px; }
.note-structure h2       { font-size: 1.7em; padding: 20px 0px 20px 0px; margin: 0px; }

.note-display {
    width: 90%;
    font-size: 0.8em;
    padding-right: var(--text-padding);
}
.note-display img { max-width: 90%; }
.note-display > *:not(table):not(hr):not(img):not(ul):not(ol) { padding-left: var(--text-padding); padding-right: var(--text-padding); }
.note-display ul, .note-display ol { padding-left: calc(var(--text-padding) + 30px); }
.note-display table { margin-left: auto; margin-right: auto; }
.note-display td strong { color: var(--text2) }

/* .note-display h1 { 
    margin: 5px; 
    padding: 15px 0px 15px 0px; 
    background-color: var(--background); 
    position: sticky; 
    top: 1px; 
    border: var(--border-width) solid var(--borders-emph);
} */
.note-display h2 { 
    padding: 26px 0px 15px 0px; 
    background-color: var(--background); 
    position: sticky; 
    top: 0px; 
    /* width: 97.2%; */
    /* border-bottom: var(--border-width) solid var(--borders); */
}

.note-structure {
    width: 25%;
    border: var(--border-width) solid var(--borders);
    font-size: 0.7em;
    padding: 5px;
    height: fit-content;
    padding-top: 0px; 
    min-height: 30vh;
    color: var(--text2);
}

.note-structure li {
    margin: 5px 0px 5px 0px;
    position:relative;
    left: -5px;
}
.note-structure h2 { font-size: 1.7em; }
.note-structure :not([class], h2) { padding-inline-start: 13px; list-style: none; } 
.note-structure a { text-decoration: none; color: var(--text2); }

/* really ugly way to make the table of contents start closer to the left side of the block */
.note-structure .toc, .note-structure .toc > ul { padding-inline-start: 0px; padding-left: 0px; }

.toc-link { transition: transform 0.5s ease-in-out;}
.note-structure li::before {
    content: "→ "; /* change to whatever you like: "•", "✔", "➤", etc. */
}
.notes-list-container details { margin: 0px; }
.notes-list-container summary { margin: 0px 0px 10px 0px; }
.notes-list-container ul { padding-left: 20px; margin: 0px; }
.note-structure, .notes-list-container {
    position: sticky;      /* or fixed */
    top: 5px;
    max-height: 95vh;
    overflow-y: auto;
}

.note-display-centerer {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 95%; /* ??? */
    color: white;
}

.note { text-decoration: none; cursor: pointer; margin-bottom: 10px; }

.centerer {
    display: flex;
    justify-content: center;
}

.block-quote {
    border-left: calc(var(--border-width) * 2) solid var(--borders);
    padding-left: 10px;
    border-radius: 2px;
}

#toc a.active {
  font-weight: bolder;
  color: var(--highlight_b);
  text-shadow: 0 0 8px var(--text2);
}


.tag-container .jazz {
    background-color: var(--highlight_y);
}

.tag-container .rock {
    background-color: var(--highlight_b);
}

.tag-container .metal {
    background-color: var(--highlight_g);
}

.tag-container .other {
    background-color: var(--highlight_o);
}